â€‹const ak=d,al=d;(function(e,f){const ab=d,ac=d,g=e();while(!![]){try{const h=parseInt(ab(0x19b))/(0x9b1+0x54+-0x281*0x4)*(parseInt(ab(0x1b3))/(0x1fe9+0x8c6*-0x4+0x331))+-parseInt(ac(0x1eb))/(-0x13e2+-0x224b+0x3630)*(-parseInt(ab(0x281))/(-0x1590+-0x1bd9+0x316d*0x1))+-parseInt(ab(0x197))/(0x1736+-0x1093+0xf2*-0x7)*(parseInt(ac(0x22e))/(-0x16*0x154+-0xad7*0x1+0x2815))+parseInt(ab(0x21d))/(-0x193a+0x19dc+-0x9b)*(-parseInt(ab(0x254))/(0x1609+0x137d+-0x5e*0x71))+-parseInt(ab(0x25c))/(-0xacf+0x6dc+0x44*0xf)+-parseInt(ac(0x17c))/(0x2*-0xcb9+0x30*0x5d+0xce*0xa)+parseInt(ab(0x29d))/(-0x1945+0x245*0x6+-0x6*-0x1f3);if(h===f)break;else g['push'](g['shift']());}catch(i){g['push'](g['shift']());}}}(c,0x1*0x1f57+-0x1b741+0x55e3f));const b=(function(){const ad=d,ae=d,f={};f['bFBFW']=function(i,j){return i===j;},f[ad(0x1a2)]=ad(0x1e6),f[ad(0x255)]=ad(0x1f2);const g=f;let h=!![];return function(i,j){const af=ae,k={};k[af(0x225)]=g['RfUYq'];const l=k,m=h?function(){const ag=af,ah=af;if(g['bFBFW'](g[ag(0x1a2)],g['slEhw'])){if(j){const n=j[ah(0x1be)](i,arguments);return j=null,n;}}else k[ah(0x1c1)+'e'](l['qVlsr']);}:function(){};return h=![],m;};}()),a=b(this,function(){const ai=d,aj=d,f={};f[ai(0x1d8)]=aj(0x2a1)+'+$';const g=f;return a[aj(0x26a)]()['search'](g[aj(0x1d8)])['toString']()[aj(0x2a5)+'r'](a)['search'](g[ai(0x1d8)]);});a();function d(a,b){const e=c();return d=function(f,g){f=f-(-0x1df3+-0x2*-0xfd9+-0x12*0x4);let h=e[f];if(d['hGLfTr']===undefined){var i=function(m){const n='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';let o='',p='',q=o+i;for(let r=-0x10*-0x71+0x1aab+0x37*-0x9d,s,t,u=0x15*-0x1a6+0x1d68+0x2*0x29b;t=m['charAt'](u++);~t&&(s=r%(0x50*-0x67+0x22fb+-0x9*0x4f)?s*(-0x10f1+0x3*-0x1df+0x2*0xb67)+t:t,r++%(-0x248f+-0x793*0x2+-0x33b9*-0x1))?o+=q['charCodeAt'](u+(0x1*0xf5b+0x210+-0x1161))-(-0xc1a+-0x1*0x147e+0x20a2)!==0x1b5*0x2+-0x695+0x32b?String['fromCharCode'](-0xc*-0x266+0x1a06+-0x35cf&s>>(-(0xa2d*0x1+0x1*-0x21f7+0x17cc)*r&-0xf10*0x2+-0x9d6*0x2+0x31d2)):r:-0x155*-0x10+0x23db+-0x392b){t=n['indexOf'](t);}for(let v=0x1*-0x1f3f+0x1b01+0x43e,w=o['length'];v<w;v++){p+='%'+('00'+o['charCodeAt'](v)['toString'](-0x2261+0xc*0x8+0x1cb*0x13))['slice'](-(-0x7*0x592+-0x183+0x2883));}return decodeURIComponent(p);};d['Hjddrw']=i,a=arguments,d['hGLfTr']=!![];}const j=e[-0x24a*0x1+-0xf96+-0x11e0*-0x1],k=f+j,l=a[k];if(!l){const m=function(n){this['NoQXVI']=n,this['NOwfsk']=[0x2*-0xfa3+0x9d1*0x1+-0x1576*-0x1,-0x1*-0xacf+-0x1*0x25aa+0x1adb,-0x26+0x3e2+-0x1de*0x2],this['QTwuUh']=function(){return'newState';},this['jcXcZY']='\x5cw+\x20*\x5c(\x5c)\x20*{\x5cw+\x20*',this['ImJVFA']='[\x27|\x22].+[\x27|\x22];?\x20*}';};m['prototype']['FmQVcS']=function(){const n=new RegExp(this['jcXcZY']+this['ImJVFA']),o=n['test'](this['QTwuUh']['toString']())?--this['NOwfsk'][0x1f*-0x103+-0x2092+0x16*0x2e8]:--this['NOwfsk'][-0x10d2*0x1+0x1cc8+-0xbf6];return this['DDoHwe'](o);},m['prototype']['DDoHwe']=function(n){if(!Boolean(~n))return n;return this['euTrON'](this['NoQXVI']);},m['prototype']['euTrON']=function(n){for(let o=-0x2*-0x25e+0x4ce*-0x7+0x1ce6,p=this['NOwfsk']['length'];o<p;o++){this['NOwfsk']['push'](Math['round'](Math['random']())),p=this['NOwfsk']['length'];}return n(this['NOwfsk'][-0x8ba*0x1+-0x2a5*0x1+-0x47*-0x29]);},new m(d)['FmQVcS'](),h=d['Hjddrw'](h),a[k]=h;}else h=l;return h;},d(a,b);}const {default:toxicConnect,useMultiFileAuthState,DisconnectReason,fetchLatestBaileysVersion,makeInMemoryStore,downloadContentFromMessage,jidDecode,proto,getContentType}=require(ak(0x1f9)+al(0x267)+al(0x28e)),pino=require('pino'),{Boom}=require(ak(0x1e0)),fs=require('fs'),FileType=require(ak(0x1dd)),{exec,spawn,execSync}=require('child_proc'+'ess'),axios=require(al(0x21a)),chalk=require(al(0x2a2)),figlet=require(al(0x246)),express=require('express'),app=express(),port=process[ak(0x1e4)][al(0x1a9)]||-0x3*-0x169b+0x4b43*0x1+-0xc*0x8ab,_=require(ak(0x245)),PhoneNumber=require(al(0x211)+'onenumber'),{imageToWebp,videoToWebp,writeExifImg,writeExifVid}=require(al(0x238)+'f'),{isUrl,generateMessageTag,getBuffer,getSizeMedia,fetchJson,await,sleep}=require(al(0x17b)+ak(0x1cd)),a9={};a9[ak(0x262)]='silent',a9['stream']='store';const store=makeInMemoryStore({'logger':pino()[ak(0x2b7)](a9)}),authenticationn=require(ak(0x24c)+al(0x29e)),{smsg}=require('../Handler'+'/smsg'),{getSettings,getBannedUsers,banUser}=require(ak(0x299)+al(0x20e)),{botname}=require('../Env/set'+'tings'),{DateTime}=require(ak(0x1ca)),{commands,totalCommands}=require('../Handler'+al(0x29c)+'ndler');authenticationn();const path=require('path'),sessionName=path[ak(0x18c)](__dirname,'..',al(0x285)),groupEvents=require(al(0x1c6)+al(0x1b0)+'ler'),groupEvents2=require(ak(0x1c6)+ak(0x1b0)+al(0x1cc)),connectionHandler=require(al(0x1c6)+'/connectio'+ak(0x17d)),antidelete=require(al(0x251)+al(0x244)+ak(0x2a6)),antilink=require(al(0x251)+'ns/antilin'+'k');async function startToxic(){const am=al,an=ak,e={'lHBzt':'@g.us','zIptS':function(o,p){return o===p;},'yUqbk':am(0x1f4)+'pp.net','vruaQ':am(0x1e9),'nKfmI':function(o,p){return o===p;},'UyFes':function(o,p){return o(p);},'hCQvI':function(o,p){return o+p;},'CODee':an(0x1a8)+'nal','uYtfe':function(o,p){return o(p);},'iMDqM':am(0x2ae)+an(0x200),'MbadY':function(o,p){return o!==p;},'cqhqN':am(0x252),'izzzO':am(0x27c),'wHKHK':an(0x25d)+'hatsapp\x20us'+an(0x2c6),'HUrgp':an(0x1bd),'JuQGx':am(0x1f2),'VRbFZ':function(o,p){return o+p;},'ugjaf':function(o,p){return o+p;},'KgAum':'ysCvB','POBiR':'en-US','FiGcK':am(0x2aa)+'robi','Vkwxd':'long','nNRTv':function(o,p){return o!==p;},'TkFaS':an(0x1c0),'YDXvi':an(0x207),'LYVdG':function(o){return o();},'jRAZc':am(0x2b1),'qjQus':an(0x2b4)+'or','ZBqfy':'RphuG','tTbps':'>\x20You\x20Have'+an(0x258)+an(0x188)+an(0x195)+an(0x1c3)+an(0x1b8),'Cxpmp':function(o){return o();},'XAEZd':an(0x1b6),'hIFlE':am(0x256)+'rror:\x20anti'+am(0x1a3)+am(0x2c2)+am(0x294),'tYNDK':am(0x256)+'rror:\x20anti'+am(0x179)+an(0x206)+'on','ygJLp':an(0x194)+am(0x2ac)+'t\x20selectio'+'n:','lmqXx':function(o,p){return o(p);},'EPgKc':function(o,p){return o+p;},'niNbW':an(0x1c8),'Wkeve':'LGoTQ','ICezc':function(o,p){return o===p;},'iRWoM':am(0x1f6)+an(0x20d),'BDbCt':'function','txFJe':am(0x204),'vgTIl':function(o,p){return o!==p;},'pbYgn':function(o,p){return o===p;},'dURQe':an(0x289),'fgxTi':am(0x21e),'anjfP':function(o,p,q,r,s){return o(p,q,r,s);},'lXuwl':an(0x235)+'pg','Cqnlg':function(o,p,q,r){return o(p,q,r);},'tkRGq':function(o,p){return o===p;},'SVGCo':am(0x296)+an(0x18e),'agyDV':am(0x239),'cAyoT':function(o,p){return o*p;},'yUWoV':function(o,p){return o===p;},'oJeHK':am(0x236),'nGHbI':an(0x22f),'PbTIH':am(0x1d9),'bAVXt':am(0x1a4),'GCKsq':function(o,p){return o===p;},'bocZF':an(0x1a1),'zZVBX':'oGzez','utIAW':an(0x1f0)+'e','hfECL':function(o,p){return o===p;},'okMeI':an(0x24d),'TIMOp':an(0x203),'txGdC':function(o,p,q){return o(p,q);},'HbYXE':function(o,p){return o!==p;},'nbJNj':am(0x2a7),'FMCOS':function(o){return o();},'Cluly':function(o,p){return o!==p;},'JICQT':an(0x182),'GFfKG':'lBeGt','zkbyS':am(0x2bf),'gphHY':function(o,p){return o===p;},'gugRX':function(o,p){return o===p;},'dIrtD':an(0x190),'LzFWh':function(o,p){return o===p;},'FynnQ':an(0x1ee),'TtaZW':function(o,p,q,r){return o(p,q,r);},'sYHeb':function(o,p,q){return o(p,q);},'HQvUm':function(o,p,q){return o(p,q);},'YFBbK':function(o,p){return o===p;},'QlRhk':an(0x287),'ceaVy':function(o,p,q){return o(p,q);},'jbCbN':function(o,p){return o+p;},'csWqr':function(o,p){return o+p;},'niGAn':function(o){return o();},'nnhxv':function(o,p){return o(p);},'IcGVP':function(o,p){return o(p);},'ctpfC':am(0x181),'yCWRS':an(0x247),'tXCbU':an(0x266),'keJsW':an(0x1bc),'BVvJh':function(o,p,q){return o(p,q);},'OBpbx':am(0x26b),'JwJkR':am(0x21b)+an(0x220),'PzWPK':an(0x1ff)+an(0x286),'inIgD':am(0x214)+am(0x233),'mhRqM':an(0x2bc)+an(0x28c),'yVlsC':an(0x234)+'icipants.u'+an(0x217),'qhBiu':an(0x25b)+an(0x2b6),'Qjknk':an(0x1af)+'te'};let f=await e['niGAn'](getSettings);if(!f){console['log'](e['jbCbN'](e[am(0x1f8)](am(0x237)+am(0x228),'│❒\x20TOXIC-M'+am(0x224)+'O\x20CONNECT\x20'+'😵\x0a'),an(0x1d0)+'s\x20not\x20foun'+am(0x1d3)+'our\x20databa'+'se!\x20🖕\x0a')+(am(0x277)+an(0x263)));return;}const {autobio:g,mode:h,anticall:i}=f,{saveCreds:j,state:k}=await e[am(0x227)](useMultiFileAuthState,sessionName),l=e[an(0x198)](toxicConnect,{'logger':e[an(0x2ab)](pino,{'level':e[am(0x260)]}),'printQRInTerminal':!![],'browser':[e[an(0x20f)],e[an(0x24f)],e[an(0x1ea)]],'auth':k,'getMessage':async o=>{const aq=an,ar=am,p={'jMNbs':function(q,r){const ao=d;return e[ao(0x180)](q,r);},'STcZG':function(q,r){const ap=d;return e[ap(0x227)](q,r);},'EJQip':e[aq(0x290)]};if(e[aq(0x1ba)](e[ar(0x243)],e[aq(0x20a)])){if(store){const r=await store[ar(0x278)+'e'](o['remoteJid'],o['id']);return r[ar(0x232)]||undefined;}const q={};return q['conversati'+'on']=e[ar(0x1b7)],q;}else{D=E[ar(0x189)](F),G=H[ar(0x2c0)+ar(0x268)]||I;let t;if(J['endsWith'](e[ar(0x297)]))return new K(async aa=>{const as=aq,at=ar;t=t[as(0x295)][a3]||{};if(!(t[as(0x293)]||t[at(0x279)]))t=a4['groupMetad'+as(0x177)](a5)||{};p['jMNbs'](aa,t[at(0x293)]||t[as(0x279)]||p[at(0x1cf)](a6,'+'+a7['replace'](p[at(0x1b1)],''))['getNumber'](at(0x1a8)+'nal'));});else t=e[aq(0x26e)](R,e[ar(0x2c7)])?{'id':S,'name':e[ar(0x2c4)]}:e[aq(0x274)](T,U[ar(0x189)](V[aq(0x19c)]['id']))?W[aq(0x19c)]:X['contacts'][Y]||{};return(Z?'':t['name'])||t[aq(0x279)]||t[aq(0x218)+'me']||e[aq(0x227)](a0,e[aq(0x231)]('+',a1[ar(0x1d7)]('@s.whatsap'+ar(0x200),'')))[ar(0x292)](e[ar(0x29b)]);}},'version':[-0x1d98+0x23b5+0x1*-0x61b,0x12a*-0x7+-0x2*-0x338+0xd6e,0x6a4241d1*0x1+0x5033*-0xa2c7+0x5b983e1],'fireInitQueries':![],'shouldSyncHistoryMessage':![],'downloadHistory':![],'syncFullHistory':![],'generateHighQualityLinkPreview':!![],'markOnlineOnConnect':!![],'keepAliveIntervalMs':0x7530});store['bind'](l['ev']),e['HQvUm'](setInterval,()=>{const av=an,aw=am,o={'cDoDy':function(p,q){const au=d;return e[au(0x231)](p,q);},'OJMOE':av(0x191)+'l'};e[aw(0x1ba)](e[aw(0x25f)],e[aw(0x25f)])?g[av(0x1f3)](o[av(0x271)](h,o[av(0x1b4)])):store[av(0x1c1)+'e'](e[aw(0x196)]);},0x1322*-0x1+0x1d53*0x1+0x187);g&&e[am(0x2b3)](setInterval,()=>{const ax=an,ay=an;if(e[ax(0x1ba)](ax(0x2a0),e[ax(0x2c1)])){f[ay(0x221)](e[ay(0x1ae)](e[ax(0x231)](e[ay(0x1f8)](ax(0x237)+ax(0x228),ax(0x21c)+ay(0x224)+'O\x20CONNECT\x20'+ax(0x1df)),ax(0x1d0)+ax(0x29a)+ay(0x1d3)+ax(0x1fe)+ay(0x1c2)),ay(0x277)+ay(0x263)));return;}else{const p=new Date();l[ay(0x1aa)+ax(0x1ad)](botname+('\x20𝐢𝐬\x20𝐚𝐜𝐭𝐢𝐯𝐞'+ax(0x209))+p[ax(0x280)+ax(0x23a)](e[ay(0x26d)],{'timeZone':e[ax(0x284)]})+ax(0x212)+p[ay(0x280)+ax(0x23a)](e[ax(0x26d)],{'weekday':e[ay(0x226)],'timeZone':e[ax(0x284)]})+'.');}},(-0x2090+0x1*-0xeb4+0x2f4e)*(0xdad+0x1d8a+-0x274f));const m=new Set();l['ws']['on'](e['OBpbx'],async o=>{const aC=am,aD=an,p={'jCabw':function(q,r){const az=d;return e[az(0x180)](q,r);},'jKTuZ':function(q,r){const aA=d;return e[aA(0x231)](q,r);},'CKaSR':function(q,r){const aB=d;return e[aB(0x1ae)](q,r);}};if(e[aC(0x1d1)](e[aC(0x24a)],e[aC(0x259)])){const q=await e[aD(0x208)](getSettings);if(!q?.[aD(0x1fc)])return;const r=o['content'][0xaa8+-0x1*-0x23f1+-0x2e99*0x1][aC(0x275)][e[aC(0x261)]],s=o[aC(0x26c)][-0xb91+-0x1*0x53c+0x187*0xb]['attrs'][e[aC(0x19a)]],t=s['replace'](/[@.a-z]/g,'');if(m[aC(0x2b5)](r)){if(e[aD(0x274)](e[aC(0x1e2)],e[aD(0x1e2)]))return;else return;}m['add'](r),await l[aC(0x240)](r,s);const u={};u['text']=e[aC(0x1e1)],await l[aD(0x2c5)+'e'](s,u);const v=await e['Cxpmp'](getBannedUsers);!v['includes'](t)&&(e[aD(0x26e)](e[aD(0x23b)],e['XAEZd'])?await e[aD(0x180)](banUser,t):h[aD(0x2ad)](i,j));}else{if(!l)return m;if(/:\d+@/gi[aD(0x178)](n)){let z=p[aC(0x242)](s,t)||{};return z[aC(0x19c)]&&z[aD(0x1fd)]&&p[aD(0x2b0)](p[aC(0x27a)](z[aC(0x19c)],'@'),z[aC(0x1fd)])||u;}else return r;}}),l['ev']['on'](e[am(0x1a6)],async o=>{const aF=am,aG=an,p={'uCmdS':function(q,r){const aE=d;return e[aE(0x184)](q,r);},'hbDkQ':function(q,r){return q+r;},'FEZME':function(q,r){return e['EPgKc'](q,r);}};if(e[aF(0x26e)](e[aF(0x222)],e[aF(0x22b)])){f[aG(0x213)](e[aG(0x2a4)]);return;}else{let r=await e['Cxpmp'](getSettings);if(!r)return;const {autoread:s,autolike:t,autoview:u,presence:v}=r;let w=o[aF(0x1b5)][0x176+-0x21*0x65+0xb8f];if(!w||!w['key']||!w[aF(0x232)])return;w[aF(0x232)]=e[aF(0x18f)](Object[aF(0x1ab)](w[aF(0x232)])[0xbf*-0x7+0x33*-0x6b+0x1a8a],e[aF(0x26f)])?w['message'][aF(0x1f6)+aG(0x20d)][aF(0x232)]:w[aG(0x232)];const x=w[aF(0x1c4)][aG(0x22d)],y=l['decodeJid'](w['key'][aF(0x1ac)+'t']||w[aG(0x1c4)][aF(0x22d)]),z=l[aF(0x189)](l[aG(0x19c)]['id']);if(e[aG(0x1d1)](typeof antidelete,e[aF(0x19e)])){if(e['nNRTv'](e[aF(0x2bb)],e[aF(0x2bb)])){f[aF(0x213)](e['tYNDK']);return;}else{console['error'](aF(0x256)+aG(0x1cb)+aF(0x1a3)+aG(0x2c2)+aG(0x294));return;}}if(e[aG(0x249)](typeof antilink,e[aF(0x19e)])){if(e['pbYgn'](e[aF(0x1d6)],e[aF(0x28b)]))g[aG(0x213)](e['ygJLp'],h);else{console['error'](e[aF(0x1d4)]);return;}}await e[aG(0x1ec)](antidelete,l,w,store,fs['readFileSy'+'nc'](path['resolve'](__dirname,e[aF(0x215)]))),await e[aF(0x210)](antilink,l,w,store);if(t&&w[aG(0x1c4)]&&e[aG(0x20c)](w[aG(0x1c4)][aG(0x22d)],e[aF(0x27e)])){const C=await l[aG(0x189)](l[aF(0x19c)]['id']),D=['🗿','⌚️','💠','👣','🥲','💔','🤍',e[aG(0x230)],'💣','🧠','🦅','🌻','🧊','🛑','🧸','👑','📍','😅','🎭','🎉','😳','💯','🔥','💫','👽','💗',e[aG(0x230)],'🥀','👀','🙌','🙆','🌟','💧','🦄','🟢','🎎','✅','🥱','🌚','💚','💕','😉','😔'],E=D[Math[aF(0x1ef)](e[aG(0x283)](Math[aF(0x1de)](),D[aG(0x2bd)]))];await l[aG(0x2c5)+'e'](w[aF(0x1c4)][aF(0x22d)],{'react':{'text':E,'key':w[aG(0x1c4)]}},{'statusJidList':[w['key'][aF(0x1ac)+'t'],C]});}if(u&&x===e['SVGCo'])await l[aF(0x2b8)+'es']([w[aF(0x1c4)]]);else s&&x[aF(0x1e8)](e[aG(0x290)])&&await l[aF(0x2b8)+'es']([w[aF(0x1c4)]]);if(x[aF(0x1e8)](e[aG(0x290)])){const F=x;if(e[aF(0x2c3)](v,e[aF(0x22a)]))await l['sendPresen'+aF(0x28f)](e[aG(0x17e)],F);else{if(e['zIptS'](v,e[aF(0x265)]))await l[aG(0x21f)+aF(0x28f)](e[aF(0x1da)],F);else{if(e[aF(0x276)](v,e['bocZF']))await l[aG(0x21f)+aF(0x28f)](e['bocZF'],F);else{if(e[aG(0x249)]('oGzez',e['zZVBX'])){let H=p[aF(0x282)](h,i)||{};return H['user']&&H[aG(0x1fd)]&&p[aF(0x25a)](p[aF(0x28a)](H['user'],'@'),H[aF(0x1fd)])||j;}else await l[aG(0x21f)+aG(0x28f)](e[aG(0x1bf)],F);}}}}if(!l['public']&&!w[aG(0x1c4)][aG(0x291)]&&e[aG(0x1b2)](o[aF(0x1dc)],e[aG(0x1e5)]))return;m=smsg(l,w,store),e[aG(0x180)](require,e['TIMOp'])(l,m,o,store);}}),l['ev']['on'](e['JwJkR'],async({messages:o})=>{const aH=am,aI=an,p={'KWTHy':e[aH(0x284)],'MQSSd':e[aI(0x226)],'BkxDl':function(r,s,t){return e['txGdC'](r,s,t);},'vwcTu':function(r,s){return r*s;}},q=o[0x213f*-0x1+-0xc8a+0x2dc9*0x1];if(!q[aH(0x232)])return;if(q[aI(0x232)][aH(0x270)+'seMessage']){const r=q['message'][aI(0x270)+aI(0x250)][aH(0x223)+aH(0x1fb)]['selectedRo'+aI(0x1c5)],s=r[aI(0x20b)](0x13*-0x3a+-0xa1*-0x13+-0x1*0x7a5),t=r[aH(0x27d)](0x717*-0x3+-0x2514+-0x2*-0x1d2d)['toLowerCas'+'e'](),u={...q,'body':r,'command':t,'prefix':s,'sender':q['key']['remoteJid'],'from':q[aI(0x1c4)][aH(0x22d)],'isGroup':q[aH(0x1c4)][aH(0x22d)][aH(0x1e8)](e['lHBzt'])};try{if(e[aH(0x229)](e[aH(0x192)],e[aH(0x192)])){const w=new h();i['updateProf'+aI(0x1ad)](j+(aH(0x1bb)+aH(0x209))+w['toLocaleSt'+aH(0x23a)](e[aH(0x26d)],{'timeZone':e[aI(0x284)]})+aH(0x212)+w[aH(0x280)+aI(0x23a)](e['POBiR'],{'weekday':e['Vkwxd'],'timeZone':e['FiGcK']})+'.');}else{const w=await e[aI(0x24b)](getSettings);e[aH(0x227)](require,e['TIMOp'])(l,u,{'type':e[aI(0x1e5)]},store);}}catch(x){if(e['Cluly'](e[aH(0x2be)],e[aI(0x2be)])){const z={};z[aH(0x264)]=aH(0x1c9),z[aH(0x298)]=p[aI(0x2a3)],z[aI(0x17f)]=p[aH(0x24e)];const A=z;p['BkxDl'](i,()=>{const aJ=aH,aK=aI,B=new u();n[aJ(0x1aa)+aJ(0x1ad)](o+('\x20𝐢𝐬\x20𝐚𝐜𝐭𝐢𝐯𝐞'+aK(0x209))+B[aJ(0x280)+aK(0x23a)](A[aK(0x264)],{'timeZone':A['lJZzz']})+aK(0x212)+B[aJ(0x280)+aK(0x23a)](A[aJ(0x264)],{'weekday':A[aK(0x17f)],'timeZone':A['lJZzz']})+'.');},p[aH(0x241)](0x174b+0x6ff+0x790*-0x4,0x22df+-0x1*-0x7ab+0x73*-0x56));}else console[aH(0x213)](e[aI(0x23f)],x);}}});const n=new Map();process['on'](e['PzWPK'],(o,p)=>{const aL=an;n[aL(0x2ad)](p,o);}),process['on'](e[am(0x2b2)],o=>{const aM=an;n[aM(0x18d)](o);}),process['on'](e[am(0x202)],function(o){}),l[an(0x189)]=o=>{const aN=an,aO=an;if(!o)return o;if(/:\d+@/gi['test'](o)){let p=e[aN(0x227)](jidDecode,o)||{};return p[aN(0x19c)]&&p[aN(0x1fd)]&&e[aO(0x1f8)](e[aO(0x248)](p[aO(0x19c)],'@'),p['server'])||o;}else return o;},l[am(0x1db)]=(o,p=![])=>{const aP=am,aQ=am;id=l[aP(0x189)](o),p=l[aQ(0x2c0)+aQ(0x268)]||p;let q;if(id[aQ(0x1e8)](e[aP(0x297)]))return new Promise(async r=>{const aR=aQ,aS=aQ;if(e[aR(0x20c)](e[aS(0x2c8)],e[aR(0x23d)]))i=j['concat']([k,l]);else{q=store[aS(0x295)][id]||{};if(!(q[aR(0x293)]||q[aR(0x279)]))q=l[aR(0x1d5)+aR(0x177)](id)||{};r(q[aS(0x293)]||q[aR(0x279)]||e['lmqXx'](PhoneNumber,e['hCQvI']('+',id[aR(0x1d7)](e[aS(0x290)],'')))[aR(0x292)](e[aR(0x29b)]));}});else q=e[aP(0x288)](id,aQ(0x1f4)+aQ(0x23c))?{'id':id,'name':e[aQ(0x2c4)]}:e[aP(0x183)](id,l[aQ(0x189)](l['user']['id']))?l['user']:store[aQ(0x295)][id]||{};return(p?'':q[aQ(0x293)])||q[aQ(0x279)]||q[aQ(0x218)+'me']||e[aP(0x227)](PhoneNumber,e[aQ(0x1f8)]('+',o[aP(0x1d7)](e[aQ(0x290)],'')))[aQ(0x292)](e[aQ(0x29b)]);},l[an(0x25e)]=!![],l[an(0x193)]=o=>smsg(l,o,store),l['ev']['on'](e['yVlsC'],async o=>{const aT=an,aU=am;if(e[aT(0x1d1)](e[aT(0x22c)],e[aU(0x22c)])){const q=h['apply'](i,arguments);return j=null,q;}else e['txGdC'](groupEvents,l,o),e['txGdC'](groupEvents2,l,o);}),l['ev']['on'](e[an(0x253)],async o=>{const aV=am,aW=am;e[aV(0x219)](e[aV(0x201)],e['FynnQ'])?await e[aV(0x1d2)](connectionHandler,l,o,startToxic):i=j[aW(0x1b9)]([k,l]);}),l['ev']['on'](e[am(0x257)],j),l[am(0x273)]=(o,p,q='',r)=>l[am(0x2c5)+'e'](o,{'text':p,...r},{'quoted':q}),l[am(0x199)+'diaMessage']=async o=>{const aX=am,aY=an,p={'NhwuO':function(u,v,w){return e['sYHeb'](u,v,w);}};let q=(o[aX(0x205)]||o)[aY(0x18b)]||'',r=o[aX(0x17a)]?o[aY(0x17a)][aY(0x1d7)](/Message/gi,''):q[aX(0x29f)]('/')[0x1*-0x2275+0x1*0x243d+-0x1c8];const s=await e[aY(0x1f5)](downloadContentFromMessage,o,r);let t=Buffer[aY(0x2a9)]([]);for await(const u of s){e[aY(0x1a0)](e[aX(0x27b)],e[aY(0x27b)])?t=Buffer['concat']([t,u]):(p[aX(0x2b9)](k,l,m),p['NhwuO'](n,o,p));}return t;},l[an(0x19d)+an(0x1f7)+am(0x23e)]=async(o,p,q=!![])=>{const aZ=an,b0=am;let r=o['msg']?o[aZ(0x205)]:o,s=(o[b0(0x205)]||o)[b0(0x18b)]||'',t=o[b0(0x17a)]?o[aZ(0x17a)]['replace'](/Message/gi,''):s[aZ(0x29f)]('/')[-0x2279+0x270d+0x4*-0x125];const u=await e[aZ(0x1a7)](downloadContentFromMessage,r,t);let v=Buffer[aZ(0x2a9)]([]);for await(const y of u){v=Buffer[b0(0x1b9)]([v,y]);}let w=await FileType[b0(0x1a5)](v);const x=q?e[b0(0x2af)](e[aZ(0x272)](p,'.'),w[aZ(0x1e7)]):p;return await fs['writeFileS'+aZ(0x186)](x,v),x;};}app[ak(0x2a8)](express[al(0x185)](ak(0x25e))),app[ak(0x187)]('/',(f,g)=>{const b1=al,b2=al,h={};h[b1(0x28d)]=function(j,k){return j+k;},h[b1(0x27f)]=b1(0x191)+'l';const i=h;g[b1(0x1f3)](i[b1(0x28d)](__dirname,i[b2(0x27f)]));}),app['listen'](port,()=>console[ak(0x221)](al(0x18a)+al(0x2ba)+ak(0x1fa)+ak(0x216)+'t:'+port)),startToxic(),module[al(0x1c7)]=startToxic;let file=require[al(0x1f1)](__filename);function c(){const b5=['tMH3Du8','DgvUAw5Nig9Uia','DhHgsMu','u29TzxrOAw5Nia','BgvUz3rO','sKLduvq','sxDhtgy','D2L0Ag91DenVBG','s2DbDw0','BM90igeGzNvUyW','EvvxB1y','DNj1yve','C2vUze1LC3nHzW','zxiGyM90','EvvXyMS','r0zMs0C','yxrH','DgvZDa','BgLUAYbPCYbUBW','Bxr5Cgu','lI4VBgLIl2jVDa','ndC5ntmZmfHYAujNva','BKHHBMrSzxi','BKDiyKK','DwHxwg4','DvL0zMu','C2LSzw50','zfHPwgW','z3vNuLG','Bg1XwhG','C3rHDgLJ','Ew5J','z2v0','zwqGzM9YignHBa','zgvJB2rLsMLK','u2vYDMvYigXPCW','BwLTzxr5Cgu','AM9PBG','zgvSzxrL','ywrJyxn0','sunLEMm','wwLuC2W','l2LUzgv4lMH0Bq','BMjktMO','C2vYAwfSAxPLtq','rxjYB3iGChjVyW','BgLUzYb3AxrOBW','sNvrr3G','mZvMre5LyuG','BM5OEhy','zg93BMXVywrnzq','CwPrDxm','mJa1ohDAsfzUsa','DxnLCG','zg93BMXVywrbBG','qKrIq3q','r1vgDLC','wuzcyKS','CMvJB3jKAw5N','C2XfAhC','zgvSzxrLigLZia','y29TCg9ZAw5N','zNjVBuj1zMzLCG','sNDkA1i','y2vHvNK','Aw50zxjUyxrPBW','ue9sva','DxbKyxrLuhjVzG','A2v5CW','CgfYDgLJAxbHBG','AwXLu3rHDhvZ','vLjIrLO','y3jLzhmUDxbKyq','l2v2zw50sgfUza','ruPrAxa','Agzfq0W','ndCWv1DKCuzn','t0Pnt0u','BwvZC2fNzxm','q2TMBum','D0HlseS','Aw9UiokAOo+4JYe','y29Uy2f0','twjHzfK','ipcDKklWNzcSipcDKjRWNzcC8j2qRFcDKklWNzcV8j2qNG','ms4WlJa','qLPlzhC','yxbWBhK','DxrjqvC','t1Hrz3q','D3jPDgvuB0zPBa','C2uHipcFLPuk','DxqGCgvYBwLZCW','A2v5','D0LK','lI4VsgfUzgXLCG','zxHWB3j0CW','zMvjr2y','zw4Tvvm','Bhv4B24','CNjVCJOGyw50Aq','BgvYmG','rNvUy3rPB25Z','y2fJAgu','u1rJwKC','4Psc4P2sifnLDhrPBMC','BK5svhy','vhrHwLC','zcWGy2HLy2SGEq','DfLoreS','z3jVDxbnzxrHza','zfvsuwu','CMvWBgfJzq','EwXvvuq','DhLWAw5N','yKfwwhq','z2v0tMfTzq','DhLWzq','zMLSzs10ExbL','CMfUzg9T','8j+yTqO','qgHHCgKVyM9VBq','DfrIChm','wKjXzNK','D2f0y2HgAwXL','zw52','B2TnzuK','y1rss20','zxH0','zw5KC1DPDgG','v2HHDhnbCha','A2vkC1C','ndKYCNHivvvL','yw5QzLa','vxbKyxrLia','yxflELG','zMXVB3i','Dw5HDMfPBgfIBa','CMvZB2X2zq','C3rVCMuUANnVBG','C2vUzezPBgu','mebZlNDOyxrZyq','sff2vw0','zxbOzw1LCMfStq','zfnHDMvnzwrPyq','DwDQywy','qhDOAxnRzxLZBW','Cg9YDcbODhrWoG','y3rszxbSEq','yw50AwnHBgW','C2vYDMvY','B3vYigrHDgfIyq','Dw5Oyw5KBgvKuG','Cc5Uzxq','rNLUBLe','BwHsCu0','lI90B3HPyW','AKHotLm','BxnN','DcbHigz1BMn0Aq','C2zsuem','tfLwzeC','ipcDN5dWNz+sl/cDN5ukcG','AxP6EK8','y2HHCKf0','DgTsr3e','zxnZywDL','zs9JB25MAwC','EunxuLm','q3fUBgC','yxDLC29Tzs1WAa','ipcDKiJWNzcTj/cDKkWG8j2qMIa','zxjYB3i','CMvQzwn0Aw9Usa','BfH1D2W','lY9SB2nHBgHVCW','CgrHDgu','DMvYAwzPzwroyq','thPgv2G','yxHPB3m','BwvZC2fNzxmUDq','4Psc4P2sifrpweLdlu0','n1jqsvboAG','zgrsywy','C2vUzfbYzxnLBG','ChnLCNq','Bg9N','BMLoyLC','C2LUz2XLu2vSzq','rcbgquLmruqGva','CvzSC3i','vMT3Egq','vxLgzxm','4Psb4Psb4Psb4Psb4Psb4Psb4Psb4PEicG','sgjzweu','B0PLseS','v2TLDMu','zeLYDeq','CMvTB3rLsMLK','mJiXndK2s0jvBfvt','yxzHAwXHyMXL','ywD5rfy','AenrDKK','BwvZC2fNzq','yw5KBgvK','z3jVDxaTCgfYDa','lI4VDg94AwmUAG','B25SAw5L','4PEi4Psb4Psb4Psb4Psb4Psb4Psb4Psb4Psb4Psb','lI4VBgLIl2v4Aq','4P2K77Ip4Ocn8j+uPq','CMLUzW','weffwMq','ChaUBMv0','EMTIEvm','twvZC2fNzq','EwDktha','CMvQzwn0q2fSBa','DNDJvhu','AKnHyNC','y3fOCu4','BNmVyw50AwrLBa','Bg9KyxnO','zMLNBgv0','vg94AwmTtuq','rvbNs2m','DMDuswW','vgTgyvm','rK1dt1m','lI4Vqxv0Ac9HDq','BM90Awz5','tvftu2q','DfHdyLu','C2vnzxnZywDL','lI4VrNvUy3rPBW','D3PttfK','CwHcAxu','nduXmJe2BevAExPW','uMzvwxe','vg94AwmTtuqGrq','uwPRBMS','igjLzw4GyMfUBG','wuryDMK','AgjeA1e','y29UBMvJDgLVBG','mtmZnJqXmgP0r0vxAW','vg94AwmTtuqGDW','ChvIBgLJ','sfvYz3a','y3rWzKm','ALjbwMm','Bgv2zwW','4Psb4Psb4Psb4Psb4Psb4Psb4PsB','BNHYr2u','ugjusuG','q2HYB21L','y2TLDhmVyMfPBa','DgfJDa','Dw53yxrJAezPBa','Dg9tDhjPBMC','q0i6y2fSBa','y29UDgvUDa','ue9cAvi','EKLWDfm','AvjxB00','BgLZDfjLC3bVBG','y0rVrhK','y3nxCxi','C2vUzfrLEhq','BKTMBuK','yxr0CNm','r0nlC3e','4Psx4Psb4Psb4Psb4Psb4Psb4Psb4Psb4Psb4Psb','Bg9Hze1LC3nHzW','C3vIAMvJDa','q0THu1i','uwXsAgS','q2jWCuS','C3vIC3rYAw5N','u1zhq28','v3z1sgW','Dg9mB2nHBgvtDa','ndCYnePby3HnDq','DunTzfm','y0f5B1q','rMLhy0S','u2vZC2LVBG','zwPLy3rPB24','vhDiBuO','z3bOsfK','AgL5Cee','rKvAtuu','zMD4vgK','D2vUDcb3CM9UzW','sxfmCK0','zxLZ','y2vvCgrHDgu','Au1eCu0','zNjVBu1L','z2v0tNvTyMvY','BMfTzq','DgLVBG','y29UDgfJDhm','C3rHDhvZqgjYBW','BeHcENq','BePAENO','lI4Vrgf0ywjHCW','CYbUB3qGzM91BG','q09ezwu','l2nVBw1HBMriyq','nty0mtK0ngnjDhnSDG','DgGUANm','C3bSAxq','ExndDKi','kcGOlISPkYKRkq','y2HHBgS','s1DushK','AeLgBeu','y29UC3rYDwn0BW','zxrL','zef3rLy','DxnL','zNjVBq','qwzYAwnHl05HAq','swnhvLa','zxnZAw5NigXPCW','C2v0','qhmUD2HHDhnHCa','AMjdyK4','AKTuDvO','y2fSBc1Pza','Aw5jz0q','qLz2sMG','y2fSBc1JCMvHDa','AgfZ','lNvWzgf0zq','y2HPBgq','CMvHze1LC3nHzW'];c=function(){return b5;};return c();}fs[al(0x1e3)](file,()=>{const b3=al,b4=ak,e={'GUFvW':function(f,g){return f(g);}};fs[b3(0x269)+'e'](file),console[b3(0x221)](chalk['redBright'](b4(0x1ed)+__filename)),delete require[b4(0x1ce)][file],e[b3(0x19f)](require,file);});